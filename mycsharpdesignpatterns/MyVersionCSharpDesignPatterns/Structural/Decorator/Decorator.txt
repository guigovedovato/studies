#Decorator
- Adding behaviour without altering the class itself.
- Facilitates the addition of behaviours to individual objects without inheriting from them.

##Motivation
- Want to augment an object with additional functionality;
- Do not want to rewrite or alter existing code (OCP);
- Want to keep new functionality separate (SRP);
- Need to be able to interact with existing structures.

##Summary
- A decorator keeps the reference to the decorated object(s);
- May or may not proxy ovel calls;
- Exists in a static variation.