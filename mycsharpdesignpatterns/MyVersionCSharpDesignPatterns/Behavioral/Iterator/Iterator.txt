#Iterator
- How transversal of data structures happens and who makes it happen.
- An object that facilitates the traversal of a data structure.

##Motivation
- Iteration (traversal) is a core functionality of various data structures;
- An iterator is a class that facilitates the traversal:
 - Keeps a reference to the current element;
 - Knows how to move to a diferent element.
- Iterator is an implicit construct.

##Summary
- An iterator specified how you can traverse an object;
- An iterator object, unlike a method, cannot be recursive;
- Generally, an IEnumerable<T>-returning method is enough;
- Iteration works through duck typing - you need a GetEnumerator() that yields a type that has Current and MoveNext()